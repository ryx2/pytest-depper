[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "pytest-depper"
version = "0.2.0"
description = "Smart test selection based on AST-level code dependency analysis"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Raymond Xu", email = "raymond@example.com"}
]
maintainers = [
    {name = "Raymond Xu", email = "raymond@example.com"}
]
keywords = [
    "pytest",
    "testing",
    "dependencies",
    "ast",
    "test-selection",
    "smart-testing",
    "ci-cd",
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Framework :: Pytest",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Testing",
    "Topic :: Software Development :: Testing :: Unit",
]
requires-python = ">=3.8"
dependencies = [
    "pytest>=7.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "ruff>=0.1.0",
    "mypy>=1.0.0",
    "black>=23.0.0",
]

[project.urls]
Homepage = "https://github.com/ryx2/pytest-depper"
Documentation = "https://github.com/ryx2/pytest-depper#readme"
Repository = "https://github.com/ryx2/pytest-depper"
Issues = "https://github.com/ryx2/pytest-depper/issues"
Changelog = "https://github.com/ryx2/pytest-depper/releases"

[project.scripts]
pytest-depper = "pytest_depper.cli:main"

[project.entry-points.pytest11]
depper = "pytest_depper.plugin"

[tool.setuptools.packages.find]
where = ["."]
include = ["pytest_depper*"]
exclude = ["tests*", "examples*"]

[tool.setuptools.package-data]
pytest_depper = ["py.typed"]

[tool.pytest.ini_options]
minversion = "7.0"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-v",
    "--strict-markers",
    "--strict-config",
    "--cov=pytest_depper",
    "--cov-report=term-missing",
    "--cov-report=html",
]

[tool.ruff]
line-length = 120
target-version = "py38"

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
]
ignore = [
    "E501",  # line too long (handled by formatter)
    "B008",  # do not perform function calls in argument defaults
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]  # Allow unused imports in __init__.py

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
strict_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = "pytest_depper.*"
disallow_untyped_defs = true

[tool.black]
line-length = 120
target-version = ["py38", "py39", "py310", "py311", "py312"]
include = '\.pyi?$'

[tool.coverage.run]
source = ["pytest_depper"]
omit = [
    "*/tests/*",
    "*/test_*.py",
    "*/__pycache__/*",
]

[tool.coverage.report]
precision = 2
show_missing = true
skip_covered = false
